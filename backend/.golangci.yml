# golangci-lint configuration for GO-PRO backend
# See https://golangci-lint.run/usage/configuration/ for full configuration reference

run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  skip-dirs:
    - vendor
    - testdata
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*_generated\\.go$"

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  path-prefix: ""
  sort-results: true

linters:
  disable-all: true
  enable:
    # Enabled by default linters
    - errcheck      # Check for unchecked errors
    - gosimple      # Simplify code
    - govet         # Go vet tool
    - ineffassign   # Detect ineffectual assignments
    - staticcheck   # Staticcheck (SA) checks
    - typecheck     # Type checker
    - unused        # Check for unused code

    # Additional recommended linters
    - bodyclose     # Check HTTP response body is closed
    - contextcheck  # Check context usage
    - cyclop        # Check cyclomatic complexity
    - dupl          # Check code duplication
    - errorlint     # Error wrapping checker
    - exhaustive    # Check exhaustiveness of enum switch
    - exportloopref # Check loop variable references
    - funlen        # Check function length
    - gocognit      # Check cognitive complexity
    - goconst       # Find repeated strings for constants
    - gocritic      # Go critic linter
    - gocyclo       # Check cyclomatic complexity
    - godot         # Check comments end with period
    - gofmt         # Check formatting
    - gofumpt       # Stricter gofmt
    - goheader      # Check license headers
    - goimports     # Check imports
    - gomodguard    # Check allowed modules
    - goprintffuncname # Check printf-like function names
    - gosec         # Security audit
    - lll           # Line length checker
    - makezero      # Find slice declarations with non-zero initial length
    - misspell      # Check spelling
    - nakedret      # Find naked returns in functions > x lines
    - nestif        # Check deeply nested if statements
    - nilerr        # Check returning nil even if error is not nil
    - nlreturn      # Check new line before return
    - noctx         # Check context as argument
    - prealloc      # Find slice declarations that could be preallocated
    - predeclared   # Find code that shadows predeclared identifiers
    - revive        # Fast configurable linter
    - rowserrcheck  # Check rows.Err is checked
    - sqlclosecheck # Check sql.Rows/sql.Stmt are closed
    - thelper       # Check test helper function begins with t.Helper()
    - tparallel     # Check t.Parallel usage
    - unconvert     # Remove unnecessary type conversions
    - unparam       # Find unused function parameters
    - wastedassign  # Find wasted assignment
    - whitespace    # Check for unnecessary whitespace

linters-settings:
  cyclop:
    max-complexity: 15
    package-average: 10.0
    skip-tests: true

  dupl:
    threshold: 100

  errorlint:
    errorf: true
    asserts: true
    comparison: true

  exhaustive:
    check-generated: false
    default-signifies-exhaustive: true

  funlen:
    lines: 80
    statements: 50

  gocognit:
    min-complexity: 15

  goconst:
    min-len: 2
    min-occurrences: 3

  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc

  gocyclo:
    min-complexity: 15

  godot:
    scope: declarations
    exclude:
      - "^fixme:"
      - "^todo:"
    capital: false

  gofumpt:
    lang-version: "1.21"
    extra-rules: true

  goheader:
    template: |-
      GO-PRO Learning Platform Backend
      Copyright (c) {{ YEAR }} GO-PRO Team
      Licensed under MIT License

  goimports:
    local-prefixes: go-pro-backend

  gosec:
    severity: medium
    confidence: medium
    excludes:
      - G204  # Allow subprocess with cmd arguments from variable
      - G304  # Allow file path from variable (needed for file serving)

  lll:
    line-length: 120
    tab-width: 4

  nakedret:
    max-func-lines: 30

  nestif:
    min-complexity: 5

  nlreturn:
    block-size: 2

  prealloc:
    simple: true
    range-loops: true
    for-loops: false

  revive:
    rules:
      - name: atomic
      - name: line-length-limit
        arguments: [120]
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: var-naming
      - name: var-declaration
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: unexported-return
      - name: indent-error-flow
      - name: errorf
      - name: empty-block
      - name: superfluous-else
      - name: unused-parameter
      - name: unreachable-code
      - name: redefines-builtin-id

  thelper:
    test:
      first: true
      name: true
      begin: true

  unparam:
    check-exported: false

  whitespace:
    multi-if: false
    multi-func: false

issues:
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - funlen
        - goconst
        - gocognit
        - cyclop

    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "

    # Exclude some staticcheck messages
    - linters:
        - staticcheck
      text: "SA9003:"

    # Exclude some gosec messages
    - linters:
        - gosec
      text: "G304" # Potential file inclusion via variable

  exclude-use-default: false
  max-issues-per-linter: 0
  max-same-issues: 0
  new: false